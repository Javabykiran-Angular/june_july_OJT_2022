Last Lecture
1 Template driven form
	- login,signup,f/b,application form 
	- all validation is perform on view file
	
2 FormControl
	- it is class
	1 valid => true/false
	2 invalid => true/false 
	3 touched => true/false 
	4 pristine => true/false
	5 dirty  =>   true/false
	6 errors  => Object 
	
	steps
	1 to create a instance of FormControl class
		we hv to use ngModel u hv to use name attribute of html 
	2 u hv create template ref. variable & assign ngModel to temp ref. variable
	3 u hv to use required attribute for the validation of errors 
	
3 Validation
4 ngForm
5 json pipe

Today Lecture
1 Continue TDF Form 
2 ngValue
3 ngSubmit



	Employee & country
	one to one mapping
	
	
	DB => 
	registration => create table
	id   => int => primary key => autoincrement
	first name => varchar2(20)
	last name =>  varchar2(20)
	username  =>  varchar2(20)
	email id  =>  varchar2(250) => unique
	mobile no =>  big int 
	password  =>  varchar2(20)
	gender   =>  varchar2(20)
	dob      =>   date 
	creation date => current Timestamp
	
	Spring boot side
	entity classs
	@Entity
	class Registration{
		
		@Id
		@GeneratedValue()
		int id;
		.....
		@Coloum(name="",)
		String emailid;
		...
	}
	
	@Entity
	country{
		int cid;
		String cname;
		
		}
	
	to Create Login Api 
	
	@RestController
	@CrossOrigin
	class Controller{
	
		@PostMapping("/login")
		public HashMap Login(@RequestBody Registration reg){
			HashMap obj=service.login(reg);
			return obj;
		}
	}
	
	service file
	class Service{
	
		public HashMap Login( Registration reg){
			Registration obj=dao.login(reg);
			
			HashMap map=new HashMap();
		// JsonObject obj=new JsonObject();
			if(obj!=null){
				map.put("msg","Valid User");
				
			}else{
				map.put("msg","Invalid User");
				
			}
			
			map.put('user',obj);
			return map;
			
		}
	}
	dao class
	
	public Registration Login( Registration reg){
			session create
			send data to db 
			return user;
		}
		
		
		addEmployee,addcountry
		what is return type string
		string => emp added succesfully +emp name 
	
		UpdateEmployee,updatecountry 
			return String
		String => Record update succesfully + emp name	
		
		delete
		return string 
		Record deleted succesfully	
		
		getemployeeParticularById,getcountrybtId
			return => object 
	



